root@cloud:~/PhucAnDuongCMS-3# cd /root/PhucAnDuongCMS-3 && pm2 stop phuan-app && cat > /tmp/update-app.sh << 'SCRIPT_END'
#!/bin/bash
set -e
cd /root/PhucAnDuongCMS-3

echo "üîÑ ƒêang c·∫≠p nh·∫≠t schema..."
# Backup
cp shared/schema.ts shared/schema.ts.backup

# S·ª≠a schema - th√™m consultationSessions n·∫øu ch∆∞a c√≥
if ! grep -q "consultationSessions:" shared/schema.ts; then
  sed -i '/remainingSessions: integer("remaining_sessions").default(0),/a\  consultationSessions: integer("consultation_sessions").default(12), // 12-24 l∆∞·ª£t t∆∞ v·∫•n s·ª©c kh·ªèe/2 nƒÉm' shared/schema.ts
fi

# Th√™m profitSharePercentage n·∫øu ch∆∞a c√≥
if ! grep -q "profitSharePercentage:" shared/schema.ts; then
  sed -i '/vipSupport: decimal("vip_support".*default("5.0"),/a\  profitSharePercentage: decimal("profit_share_percentage", { precision: 5, scale: 2 }).default("49.0"), // 49% l·ª£i t·ª©c sau thu·∫ø' shared/schema.ts
fi

# Th√™m padToken n·∫øu ch∆∞a c√≥
if ! grep -q 'padToken: decimal("pad_token"' shared/schema.ts; then
  sed -i '/profitSharePercentage:.*default("49.0"),/a\  padToken: decimal("pad_token", { precision: 15, scale: 2 }).default("0"), // PAD Token (100 PAD = 1 tri·ªáu VNƒê)' shared/schema.ts
fi

echo "‚úÖ Schema updated"
echo "üóÑÔ∏è  ƒêang c·∫≠p nh·∫≠t database..."
npm run db:push || npm run db:push -- --force

echo "üîÑ ƒêang c·∫≠p nh·∫≠t routes..."
cp server/routes.ts server/routes.ts.backup

# Update POST /api/cards endpoint
cat > /tmp/post_cards.txt << 'NEWCODE'
  app.post("/api/cards", async (req, res) => {
    try {
      const cardData = insertCardSchema.parse(req.body);
      
      const price = parseFloat(cardData.price);
      const padToken = (price / 1000000) * 100;
      
      const consultationSessionsMap: Record<string, number> = {
        "Standard": 12,
        "Silver": 15,
        "Gold": 18,
        "Platinum": 21,
        "Diamond": 24
      };
      const consultationSessions = consultationSessionsMap[cardData.cardType] || 12;
      
      const enrichedCardData = {
        ...cardData,
        padToken: padToken.toString(),
        consultationSessions
      };
      
      const card = await storage.createCard(enrichedCardData);
      
      if (req.isAuthenticated() && req.user && card.ownerId) {
        const userId = card.ownerId;
        const userCards = await storage.getCards();
        const totalCardValue = userCards
          .filter(c => c.ownerId === userId)
chmod +x /tmp/update-app.sh && /tmp/update-app.sh server/routes.tsrofitSharePercentage: parseFloat(card.profitSharePercentage || "49"),\n        padToken: parseFloat(card.padToken || "0"),\n        consul
[PM2] Applying action stopProcessId on app [phuan-app](ids: [ 0 ])
[PM2] [phuan-app](0) ‚úì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ id ‚îÇ name         ‚îÇ namespace   ‚îÇ version ‚îÇ mode    ‚îÇ pid      ‚îÇ uptime ‚îÇ ‚Ü∫    ‚îÇ status    ‚îÇ cpu      ‚îÇ mem      ‚îÇ user     ‚îÇ watching ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 0  ‚îÇ phuan-app    ‚îÇ default     ‚îÇ 1.0.0   ‚îÇ fork    ‚îÇ 0        ‚îÇ 0      ‚îÇ 249  ‚îÇ stopped   ‚îÇ 0%       ‚îÇ 0b       ‚îÇ root     ‚îÇ disabled ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
üîÑ ƒêang c·∫≠p nh·∫≠t schema...
‚úÖ Schema updated
üóÑÔ∏è  ƒêang c·∫≠p nh·∫≠t database...

> rest-express@1.0.0 db:push
> drizzle-kit push

No config path provided, using default 'drizzle.config.ts'
Reading config file '/root/PhucAnDuongCMS-3/drizzle.config.ts'
Using 'pg' driver for database querying
[‚úì] Pulling schema from database...
 Warning  Found data-loss statements:
¬∑ You're about to delete roles table with 7 items
¬∑ You're about to delete session table with 16 items
¬∑ You're about to delete pad_token column in users table with 2 items

THIS ACTION WILL CAUSE DATA LOSS AND CANNOT BE REVERTED

Do you still want to push changes?
‚ùØ No, abort
  Yes, I want to remove 2 tables, remove 1 column, 
